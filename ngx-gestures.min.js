!function(a){"use strict";var b,c,d;a.module("angular-gestures",[]),b={hmDoubleTap:"doubletap",hmDragstart:"panstart",hmDrag:"pan",hmDragUp:"panup",hmDragDown:"pandown",hmDragLeft:"panleft",hmDragRight:"panright",hmDragend:"panend",hmPanstart:"panstart",hmPan:"pan",hmPanUp:"panup",hmPanDown:"pandown",hmPanLeft:"panleft",hmPanRight:"panright",hmPanend:"panend",hmHold:"press",hmPinch:"pinch",hmPinchIn:"pinchin",hmPinchOut:"pinchout",hmPress:"press",hmRelease:"release",hmRotate:"rotate",hmSwipe:"swipe",hmSwipeUp:"swipeup",hmSwipeDown:"swipedown",hmSwipeLeft:"swipeleft",hmSwipeRight:"swiperight",hmTap:"tap",hmTouch:"touch",hmTransformstart:"transformstart",hmTransform:"transform",hmTransformend:"transformend"},c={hmDoubleTap:[Hammer.Tap,"Hammer.Tap"],hmDragstart:[Hammer.Pan,"Hammer.Pan"],hmDrag:[Hammer.Pan,"Hammer.Pan"],hmDragUp:[Hammer.Pan,"Hammer.Pan"],hmDragDown:[Hammer.Pan,"Hammer.Pan"],hmDragLeft:[Hammer.Pan,"Hammer.Pan"],hmDragRight:[Hammer.Pan,"Hammer.Pan"],hmDragend:[Hammer.Pan,"Hammer.Pan"],hmPanstart:[Hammer.Pan,"Hammer.Pan"],hmPan:[Hammer.Pan,"Hammer.Pan"],hmPanUp:[Hammer.Pan,"Hammer.Pan"],hmPanDown:[Hammer.Pan,"Hammer.Pan"],hmPanLeft:[Hammer.Pan,"Hammer.Pan"],hmPanRight:[Hammer.Pan,"Hammer.Pan"],hmPanend:[Hammer.Pan,"Hammer.Pan"],hmHold:[Hammer.Press,"Hammer.Press"],hmPinch:[Hammer.Pinch,"Hammer.Pinch"],hmPinchIn:[Hammer.Pinch,"Hammer.Pinch"],hmPinchOut:[Hammer.Pinch,"Hammer.Pinch"],hmPress:[Hammer.Press,"Hammer.Press"],hmRotate:[Hammer.Rotate,"Hammer.Rotate"],hmSwipe:[Hammer.Swipe,"Hammer.Swipe"],hmSwipeUp:[Hammer.Swipe,"Hammer.Swipe"],hmSwipeDown:[Hammer.Swipe,"Hammer.Swipe"],hmSwipeLeft:[Hammer.Swipe,"Hammer.Swipe"],hmSwipeRight:[Hammer.Swipe,"Hammer.Swipe"],hmTap:[Hammer.Tap,"Hammer.Tap"]},d=!1,a.forEach(b,function(b,e){a.module("angular-gestures").directive(e,["$parse","$log","$timeout","hammerDefaultOpts",function(f,g,h,i){return function(h,j,k){var l;k.$observe(e,function(m){var q,r,s,n=f(m),o=f(k[e+"Opts"])(h,{}),p=a.copy(i);if(a.extend(p,o),a.isUndefined(j.hammertime)){if(q=a.isDefined(p.recognizers)?p.recognizers:[],r=c[e],a.isDefined(r)&&(s=!1,a.forEach(q,function(b){r[0]===b[0]&&(a.isUndefined(b[1].enable)||b[1].enable===!0)&&(s=!0)}),!s))throw new Error("Directive "+e+" requires gesture recognizer ["+r[1]+"] to be enabled");j.hammer=new Hammer.Manager(j[0],p),h.$on("$destroy",function(){j.hammer.off(b),j.hammer.destroy()})}l=function(a){d&&g.debug("angular-gestures: ",b,a);var c=function(){var b=n(h,{$event:a});"function"==typeof b&&b.call(h,a)};"$apply"===h.$root.$$phase||"$digest"===h.$root.$$phase?c():h.$apply(c)},j.hammer.on(b,l)})}}])}),a.module("angular-gestures").provider("hammerDefaultOpts",function(){var a={};this.set=function(b){a=b},this.$get=function(){return a}})}(window.angular);